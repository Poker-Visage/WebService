
##css常用样式
		1.布局相关-----盒子模型
		2.背景属性------背景颜色和背景图片（平铺，大小，位置）		
		3.字体属性
		4.文本属性
		5.边框属性
		6.常见复杂属性
			
			##   ***浮动 float***
	float：left；元素浮动起来往左放
	float：right；往右放
	一旦元素设置了浮动属性，当前元素就会脱离默认文档流， 在默认文档流之上渲染绘制
	
	元素浮动后，先前位置将会被其他元素占用。
	float最常见的用法是把块级元素横向排列，  		
			-display
				-块级，独占一行，可以有宽高，margin上右下左都生效
				-行内，从左到右依次摆放，宽高不生效，margin，top
				    bottom不生效
				-行内块   可以和其他行内块占一行，可以设置宽高
			-浮动
			   1.浮动时候，如果本标签上边的标签还处于文档流中，本标签只在
			   当前行浮动
			   2.如果本标签上边的标签也浮动了，本标签会在上边标签那一行浮
			   动
			   3.clear：both，清除浮动，本标签不被上面浮动的其它标签
			   覆盖
			   4.浮动多用于块级元素横向显示
		定位 position
		 	      position：absolute ；绝对定位
		 	      position：relative	 ；相对定位
		 	总结：position会让标签脱离默认文档流，成为一个单独的层
		 	
		 	   1。一个标签如果设置了position属性，就会解封另外4个属性
		 	   		top left right bottom 离上边的距离        	    
		 	  2.absolute定位之后，原位置会被其他元素占用
		 	  3.relative，定位之后，原位置不会被其他元素占用
		 	  4.如果父级标签没有写position，子标签absolute，那么子标签
		 	  相对浏览器左上角原点定位
		 	  5.子标签relation不管父级是否有position属性，都是相对自己原来
		 	  的位置去定位 
		 	  6.父级标签写了position，子标签absolute，相对于父级标签左上角
		 	  定位，同时支持margin
		 	  
		 	  7.多重父级标签中谁写了position，并且子标签absolute，则以最近的
		 	  那层写了position属性的标签，左上角为原点定位（从内往外找）
##总结  写代码的套路：
		1.如果标签原始位置不能被占用，使用relative相对于自己原来位置去定位。
		2.如果标签位置需要被占用，使用absolute但是需要在父级标签中添加position：relative
			告诉子元素，以我定位！
		##关于层数
				后写定位的层数高，z-index可以设置层数，数字越大，层数越高，层数高的先显示
	
	 position：fixed ；相对窗口定位（固定的）						 	  
		 	  		