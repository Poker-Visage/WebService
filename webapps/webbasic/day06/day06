day06

                                                     !!!!JavaScript
简介：网页所有的交互都要使用JavaScript-jQuery（相当于java和API的关系）                                                     

	1.可以使用任何文本编译工具编写
	2.由浏览器内置的JavaScript引擎执行代码
	3.解释执行：事先不编译，逐行执行
	4.基于对象：内置了大量写好的    对象
	
##1.学习如何找到标签对象
	2.学习对标签对象的属性内容，进行增删改查。
	
	##javaScript的使用
	1.事件定义式，在时间定义时直接写js代码
	
	2.嵌入式，在<script>标签内，写js代码
	
	3.文件调用式，
###总结：
		文件调用式，在单独的.js文件写js代码需要引用到网页才能使用，
 	引用时：script标签必须是双标签（哪怕没有内容时）
 	作用就是导入外部js文件。不允许同时调用文件，又写js代码
 	
4.js注释：<script>标签中是js的地盘，要使用js的注释
		/*js不区分单引号和双引号*/
		
##js数据类型
		1.变量的声明和定义  var
	总结：在<script>标签中写js代码一般有两种形式
	   1.封装成函数，该函数在页面加载完成之后，用户激活事件时，被调用。
	   2.直接在标签中写js代码，这段js代码是在页面加载过程中被直接调用，
	   其调用时机甚至比body渲染还早。	

##number类型
		不区分整型和浮点型，所有的数字，都采用64位浮点格式存储
		js中没有double的概念
		
##string类型
		由 Unicode 字符、数字、标点符号组成的字符序列，由首尾一对单引号（双引号）括起。
	单引号和双引号嵌套的时候无需转译，js中没有char的概念，字符就是一个长度的string	
	     str=“你说\"小鸡炖蘑菇\"”;java需要转译，js不需要转译
	     
##boolean:true和false
		做数学运算时，自动转型为数值参与运算
       ##在参与纯数学运算时，true---1，false----0；
	js引擎对boolean类型的解释规则
	1.  非空字符串解释为true，“”空字符串解释为false
	2.  0为flase，其他数字为true		     
	3. null undefined都为false

###强制类型转换	 	
			
###数字运算符
	   + - * /  %  ++
	 总结：1.纯数字的字符串，除了+会变成字符串连接，其他的运算都会自动转成数字
	 		   2.js中的除法，如果除不尽会得到浮点数100/3
	 
###关系运算符 > <  >=  <=  !=  ==
###逻辑运算符  ！&&||    要注意短路问题

###条件表达式
		js可以使用任何数据做条件，
		当使用非boolean值做条件时：
			true  非空字符串  非0数字
			false null undefined “” 0 NaN	 	 		   	  			      		 		
		